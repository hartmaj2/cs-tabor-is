@namespace Client.Components

@* This component represents a simple modal for confirming deletion of a participant *@

<div class="modal-div">
    <div class="modal-text"> Are you sure you want to delete @CurrentParticipant.FirstName @CurrentParticipant.LastName? </div>
    <div class="modal-buttons">
        <button class="btn btn-primary" @onclick="OnDeleteButton"> Yes </button>
        <button class="btn btn-primary" @onclick="OnRejectButton"> No </button>
    </div>
</div>

@code {

    // The participant to be deleted or not
    [Parameter]
    public required ParticipantDto CurrentParticipant { get; set; }

    // Callback to which connects the method that requests deletion from participants api (the api needs to be given the id of the participant to delete)
    [Parameter]
    public EventCallback<int> OnDeleteParticipant { get; set; }

    // Used to hide the modal in parent component
    [Parameter]
    public EventCallback OnRejectButton { get; set; }

    // We want to invoke the method that connected to the OnDeleteParticipant EventCallback with the current participant id
    private void OnDeleteButton()
    {
        OnDeleteParticipant.InvokeAsync(CurrentParticipant.Id);
    }
}