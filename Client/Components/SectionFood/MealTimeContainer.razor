@namespace Client.Components
@* This component will hold meals of given type for given date *@

<div class="div-table-container">
    <div class="div-table-container-header">
        <span> @MealTime </span>
        <button class="btn btn-primary" @onclick="OnAddMealButtonClicked"> + </button>
    </div>
    <div class="div-table">
        <div class="div-table-header">
            <div> Name </div>
            <div> Type </div>
            <div> Allergens </div>
        </div>
        <div class="div-table-body">
            @foreach (var meal in Meals!.Where(m => m.MealTime == MealTime).OrderBy(m => m.Type))
            {
                <div class="div-table-row" >
                    <div> @meal.Name </div>
                    <div> @meal.Type </div>
                    <div>
                        @foreach( var allergen in meal.Allergens)
                        {
                            <span> @allergen.Name,  </span>
                        }
                    </div>
                    <button class="btn btn-primary" @onclick="() => OnEditButtonClicked.InvokeAsync(meal)"> Edit </button>
                    <button class="btn btn-primary" @onclick="() => OnDeleteButtonClicked.InvokeAsync(meal)"> Delete </button>
                </div>
            }
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public DateOnly Date { get; set; }

    [Parameter]
    public MealTime MealTime { get; set; }

    [Parameter]
    public IQueryable<MealDto>? Meals { get; set; }

    [Parameter]
    public EventCallback OnAddMealButtonClicked { get; set; }

    [Parameter]
    public EventCallback<MealDto> OnDeleteButtonClicked { get; set; }

    [Parameter]
    public EventCallback<MealDto> OnEditButtonClicked { get; set; }
}