@* This component will hold meals of given type for given date *@

<div class="meal-type-container">
    <div class="meal-type-header">
        <span> @MealTime </span>
        <button class="btn btn-primary" @onclick="OnAddMealButtonClicked"> + </button>
    </div>
    <div class="div-table">
        <div class="div-table-header">
            <div> Name </div>
            <div> Type </div>
        </div>
        @foreach (var meal in Meals!.Where(m => m.MealTime == MealTime).OrderBy(m => m.Type))
        {
            <div class="div-table-row" >
                <div> @meal.Name </div>
                <div> @meal.Type </div>
                <button class="btn btn-primary" @onclick="() => OnEditButtonClicked.InvokeAsync(meal)"> Edit </button>
                <button class="btn btn-primary" @onclick="() => OnDeleteButtonClicked.InvokeAsync(meal)"> Delete </button>
            </div>
        }
    </div>
</div>

@code
{
    [Parameter]
    public DateOnly Date { get; set; }

    [Parameter]
    public MealTime MealTime { get; set; }

    [Parameter]
    public IQueryable<MealDto>? Meals { get; set; }

    [Parameter]
    public EventCallback OnAddMealButtonClicked { get; set; }

    [Parameter]
    public EventCallback<MealDto> OnDeleteButtonClicked { get; set; }

    [Parameter]
    public EventCallback<MealDto> OnEditButtonClicked { get; set; }
}